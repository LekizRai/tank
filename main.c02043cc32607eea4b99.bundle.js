(()=>{"use strict";var t,e={217:(t,e,s)=>{s(440);class i extends Phaser.Scene{constructor(){super("preload")}preload(){this.createLoadingGraphics(),this.load.on("progress",(t=>{this.progressBar.clear(),this.progressBar.fillStyle(8971347,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*t,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload"),this.load.image("gun-1","./assets/images/gun-1.png"),this.load.image("hull-1","./assets/images/hull-1.png"),this.load.image("track-1","./assets/images/track-1.png"),this.load.image("bullet-1","./assets/images/bullet-1.png"),this.load.image("pause","./assets/images/pause.png"),this.load.image("replay","./assets/images/replay.png"),this.load.image("menu","./assets/images/menu.png"),this.load.image("board","./assets/images/board.png")}update(){this.scene.start("menu")}createLoadingGraphics(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(16777215,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}class a extends Phaser.GameObjects.Image{constructor(t){super(t.scene,t.x,t.y,t.texture),this.rotation=t.rotation,this.initImage(),this.scene.add.existing(this)}initImage(){this.bulletSpeed=1e3,this.setOrigin(.5,.5),this.setDepth(2),this.scene.physics.world.enable(this),this.body.setSize(10,10),this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,this.bulletSpeed,this.body.velocity)}update(){}}class h extends Phaser.GameObjects.Container{getBullets(){return this.bullets}constructor(t,e,s){super(t,e,s),this.initTank(),this.scene.add.existing(this)}initTank(){var t;this.health=1,this.lastShoot=0,this.speed=100,this.tankLeftTrack=this.scene.add.image(-35,-15,"track-1").setScale(.6),this.tankRightTrack=this.scene.add.image(35,-15,"track-1").setScale(.6),this.tankHull=this.scene.add.image(0,0,"hull-1").setScale(.7).setOrigin(.5,.6),this.tankBody=this.scene.add.container(0,0),this.tankBody.add(this.tankLeftTrack),this.tankBody.add(this.tankRightTrack),this.tankBody.add(this.tankHull),this.tankGun=this.scene.add.image(0,0,"gun-1").setScale(.7),this.lifeBar=this.scene.add.graphics(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),this.add(this.tankBody),this.add(this.tankGun),this.add(this.lifeBar),this.redrawLifebar(),this.pointer=this.scene.input.activePointer,this.cursors=null===(t=this.scene.input.keyboard)||void 0===t?void 0:t.createCursorKeys(),this.scene.physics.world.enable(this)}update(){this.active?(this.handleInput(),this.handleShooting()):(this.destroy(),this.lifeBar.destroy())}handleInput(){this.pointer.updateWorldPoint(this.scene.cameras.main);let t=Phaser.Math.RadToDeg(Phaser.Math.Angle.Between(this.tankGun.x,this.tankGun.y,this.pointer.worldX-this.x,this.pointer.worldY-this.y)+Math.PI/2);Phaser.Math.Angle.ShortestBetween(this.tankGun.angle,t)>0?this.tankGun.angle+=1:this.tankGun.angle-=1,this.cursors.up.isDown?this.scene.physics.velocityFromAngle(this.tankBody.angle-90,this.speed,this.body.velocity):this.cursors.down.isDown?this.scene.physics.velocityFromAngle(this.tankBody.angle-90,-this.speed,this.body.velocity):this.body.setVelocity(0,0),this.cursors.left.isDown?this.tankBody.angle-=1:this.cursors.right.isDown&&(this.tankBody.angle+=1)}handleShooting(){(this.cursors.space.isDown||this.pointer.leftButtonDown())&&this.scene.time.now>this.lastShoot&&(this.scene.tweens.add({targets:this,props:{alpha:.8},delay:0,duration:5,ease:"Power1",easeParams:null,hold:0,repeat:0,repeatDelay:0,yoyo:!0,paused:!1}),this.bullets.getLength()<10&&(this.bullets.add(new a({scene:this.scene,rotation:this.tankGun.rotation,x:this.tankGun.x+this.x+100*Math.sin(Phaser.Math.DegToRad(this.tankGun.angle)),y:this.tankGun.y+this.y-100*Math.cos(Phaser.Math.DegToRad(this.tankGun.angle)),texture:"bullet-1"})),this.lastShoot=this.scene.time.now+80))}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-50,100,100*this.health,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-50,100,100,15),this.lifeBar.setDepth(1)}updateHealth(){this.health>0?(this.health-=.05,this.redrawLifebar()):(this.health=0,this.active=!1,this.scene.scene.start("menu"))}}class n extends Phaser.GameObjects.Container{getBullets(){return this.bullets}constructor(t,e,s){super(t,e,s),this.initTank(),this.scene.add.existing(this)}initTank(){this.health=1,this.lastShoot=0,this.speed=100,this.tankLeftTrack=this.scene.add.image(-35,-15,"track-1").setScale(.6),this.tankRightTrack=this.scene.add.image(35,-15,"track-1").setScale(.6),this.tankHull=this.scene.add.image(0,0,"hull-1").setScale(.7).setOrigin(.5,.6),this.tankBody=this.scene.add.container(0,0),this.tankBody.add(this.tankLeftTrack),this.tankBody.add(this.tankRightTrack),this.tankBody.add(this.tankHull),this.tankGun=this.scene.add.image(0,0,"gun-1").setScale(.7),this.lifeBar=this.scene.add.graphics(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),this.add(this.tankBody),this.add(this.tankGun),this.add(this.lifeBar),this.redrawLifebar(),this.scene.physics.world.enable(this)}update(){this.active?this.handleShooting():(this.destroy(),this.lifeBar.destroy())}handleShooting(){this.scene.tweens.add({targets:this,props:{alpha:.8},delay:0,duration:5,ease:"Power1",easeParams:null,hold:0,repeat:0,repeatDelay:0,yoyo:!0,paused:!1}),this.scene.time.now>this.lastShoot&&this.bullets.getLength()<10&&(this.bullets.add(new a({scene:this.scene,rotation:this.tankGun.rotation,x:this.tankGun.x+this.x+100*Math.sin(Phaser.Math.DegToRad(this.tankGun.angle)),y:this.tankGun.y+this.y-100*Math.cos(Phaser.Math.DegToRad(this.tankGun.angle)),texture:"bullet-1"})),this.lastShoot=this.scene.time.now+400)}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-50,100,100*this.health,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-50,100,100,15),this.lifeBar.setDepth(1)}updateHealth(){this.health>0?(this.health-=.05,this.redrawLifebar()):(this.health=0,this.active=!1)}setGunAngle(t){Phaser.Math.Angle.ShortestBetween(this.tankGun.angle,t)>0?this.tankGun.angle+=1:this.tankGun.angle-=1}}class r extends Phaser.GameObjects.Image{constructor(t){super(t.scene,t.x,t.y,t.texture),this.initImage(),this.scene.add.existing(this)}initImage(){this.setOrigin(0,0),this.scene.physics.world.enable(this),this.body.setImmovable(!0)}update(){}}class l extends Phaser.Scene{constructor(){super("gameplay")}init(){}create(){this.cameras.main.setBackgroundColor(16777215),this.map=this.make.tilemap({key:"levelMap"}),this.tileset=this.map.addTilesetImage("tiles"),this.layer=this.map.createLayer("tileLayer",this.tileset,0,0),this.layer.setCollisionByProperty({collide:!0}),this.obstacles=this.add.group({runChildUpdate:!0}),this.enemies=this.add.group({}),this.convertObjects(),this.physics.add.collider(this.player,this.layer),this.physics.add.collider(this.player,this.obstacles),this.physics.add.collider(this.player.getBullets(),this.layer,this.bulletHitLayer,void 0,this),this.physics.add.collider(this.player.getBullets(),this.obstacles,this.bulletHitObstacles,void 0,this),this.enemies.getChildren().forEach((t=>{const e=t;this.physics.add.overlap(this.player.getBullets(),e,this.playerBulletHitEnemy,void 0,this),this.physics.add.overlap(e.getBullets(),this.player,this.enemyBulletHitPlayer,void 0),this.physics.add.collider(e.getBullets(),this.obstacles,this.bulletHitObstacles,void 0),this.physics.add.collider(e.getBullets(),this.layer,this.bulletHitLayer,void 0)}),this),this.cameras.main.startFollow(this.player),this.add.zone(0,0,1200,1600),this.scene.launch("pause")}update(){this.player.update(),this.enemies.getChildren().forEach((t=>{const e=t;if(e.update(),this.player.active&&e.active){const t=Phaser.Math.RadToDeg(Phaser.Math.Angle.Between(e.body.x,e.body.y,this.player.body.x,this.player.body.y)+Math.PI/2);e.setGunAngle(t)}}),this)}convertObjects(){var t;(null===(t=this.map.getObjectLayer("objects"))||void 0===t?void 0:t.objects).forEach((t=>{if("player"===t.type)this.player=new h(this,t.x,t.y);else if("enemy"===t.type){const e=new n(this,t.x,t.y);this.enemies.add(e)}else{const e=new r({scene:this,x:t.x,y:t.y-40,texture:t.type});this.obstacles.add(e)}}))}bulletHitLayer(t){t.destroy()}bulletHitObstacles(t,e){t.destroy()}enemyBulletHitPlayer(t,e){t.destroy(),e.updateHealth()}playerBulletHitEnemy(t,e){t.destroy(),e.updateHealth()}}class o extends Phaser.Scene{constructor(){super("menu"),this.bitmapTexts=[]}init(){var t;const e=null===(t=this.input.keyboard)||void 0===t?void 0:t.addKey(Phaser.Input.Keyboard.KeyCodes.S);e&&(this.startKey=e,this.startKey.isDown=!1)}create(){this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2-120,this.sys.canvas.height/2,"font","PRESS S TO PLAY",30)),this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2-120,this.sys.canvas.height/2-100,"font","TANK",100))}update(){this.startKey.isDown&&this.scene.start("gameplay")}}class d extends Phaser.GameObjects.Container{constructor(t,e,s,i,a){super(t,e,s),this.isDown=!1,this.texture=this.scene.add.image(0,0,i).setInteractive(),this.text=this.scene.add.text(0,0,a),this.add(this.texture),this.add(this.text),this.scene.add.existing(this),this.texture.on("pointerover",(()=>{this.isDown=!1})),this.texture.on("pointerout",(()=>{this.isDown=!1})),this.texture.on("pointerdown",(()=>{this.isDown=!0}))}onOver(t){this.texture.on("pointerover",t)}onOut(t){this.texture.on("pointerout",t)}onDown(t){this.texture.on("pointerdown",t)}onUp(t){this.texture.on("pointerup",t)}onClick(t){this.texture.on("pointerup",(()=>{this.isDown&&(this.isDown=!1,t())}))}}class c extends Phaser.Scene{constructor(){super("pause")}preload(){}create(){this.board=this.add.image(600,500,"board").setScale(.5,.2).setVisible(!1),this.pauseButton=new d(this,100,100,"pause",""),this.pauseButton.onClick((()=>{this.replayButton.setVisible(!0),this.menuButton.setVisible(!0),this.pauseButton.setVisible(!1),this.scene.pause("gameplay")})),this.replayButton=new d(this,500,500,"replay","").setVisible(!1),this.replayButton.onClick((()=>{this.replayButton.setVisible(!1),this.menuButton.setVisible(!1),this.pauseButton.setVisible(!0),this.scene.resume("gameplay")})),this.replayButton.onOver((()=>{this.add.tween({targets:this.replayButton,scale:.8,duration:200})})),this.replayButton.onOut((()=>{this.add.tween({targets:this.replayButton,scale:1,duration:200})})),this.menuButton=new d(this,600,600,"menu","").setVisible(!1),this.menuButton.onClick((()=>{this.scene.stop("pause"),this.scene.stop("gameplay"),this.scene.start("menu")}))}update(t,e){}}const u={title:"Tank",url:"https://github.com/digitsensitive/phaser3-typescript",version:"0.0.1",width:1200,height:1600,zoom:.6,type:Phaser.AUTO,scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},parent:"game",scene:[i,o,l,c],input:{keyboard:!0},physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!0}},backgroundColor:"#000000",render:{antialias:!0}};class p extends Phaser.Game{constructor(t){super(t)}}window.addEventListener("load",(()=>{new p(u)}))}},s={};function i(t){var a=s[t];if(void 0!==a)return a.exports;var h=s[t]={exports:{}};return e[t].call(h.exports,h,h.exports,i),h.exports}i.m=e,t=[],i.O=(e,s,a,h)=>{if(!s){var n=1/0;for(d=0;d<t.length;d++){for(var[s,a,h]=t[d],r=!0,l=0;l<s.length;l++)(!1&h||n>=h)&&Object.keys(i.O).every((t=>i.O[t](s[l])))?s.splice(l--,1):(r=!1,h<n&&(n=h));if(r){t.splice(d--,1);var o=a();void 0!==o&&(e=o)}}return e}h=h||0;for(var d=t.length;d>0&&t[d-1][2]>h;d--)t[d]=t[d-1];t[d]=[s,a,h]},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={792:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var a,h,[n,r,l]=s,o=0;if(n.some((e=>0!==t[e]))){for(a in r)i.o(r,a)&&(i.m[a]=r[a]);if(l)var d=l(i)}for(e&&e(s);o<n.length;o++)h=n[o],i.o(t,h)&&t[h]&&t[h][0](),t[h]=0;return i.O(d)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})();var a=i.O(void 0,[96],(()=>i(217)));a=i.O(a)})();